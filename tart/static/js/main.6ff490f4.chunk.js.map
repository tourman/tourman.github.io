{"version":3,"sources":["js/components/presents/AppWrapper.jsx","js/components/presents/Linen/Figure.jsx","js/helpers.js","js/components/presents/Linen.jsx","js/components/presents/Info/Total/Bar.jsx","js/components/presents/Info/Total.jsx","js/components/presents/Info/ItemSet/Item.jsx","js/components/presents/Info/ItemSet.jsx","js/components/presents/Info.jsx","js/stores/linen/service.js","js/reducer.js","js/components/containers/Tart.jsx","js/components/containers/App.jsx","serviceWorker.js","index.js"],"names":["silentFocus","action","_window","window","scrollX","scrollY","scrollTo","AppWrapper","props","children","React","Children","map","child","cloneElement","throttleDelay","react_default","a","createElement","memo","style","radius","size","diameter","left","x","top","y","width","height","lineHeight","className","concat","type","join","draggable","weightChanging","handlers","onDragStart","onMouse","onFigureMoveStart","index","onDragEnd","onFigureMoveEnd","Object","assign","areTotalWeightsDifferent","prevProps","weightDiff","totalWeight","Math","abs","Number","EPSILON","typeMap","Map","set","handleMouse","el","e","rect","current","getBoundingClientRect","clientX","clientY","typeCondition","ctrlKey","shiftKey","button","get","MemoizedLinenWrapper","useRef","bind","objectSpread","ref","onMouseDown","target","onFigureAdd","onMouseMove","onFigureLastResize","onMouseUp","onFigureLastUpdate","propsToCompare","_i","length","prop","MemoizedFigures","callbacks","pickBy","figures","_ref","id","Linen_Figure","key","move","FiguresContainer","this","state","Component","figuresRef","useEffect","setState","Linen_FiguresContainer","percent","toFixed","Fragment","entries","typeRelativeWeights","_ref2","slicedToArray","relativeWeight","barProps","Total_Bar","ItemInteractiveName","ItemInteractiveNameWithRef","forwardRef","timeout","clearTimeout","document","activeElement","focus","setTimeout","focusItemInteractiveName","value","name","onChange","preventDefault","onChangeName","controlsHoverMap","onRemove","onClick","ItemContainer","renderInteractiveName","renderControls","renderChart","renderMap","_useState","useState","_useState2","hover","onChangeHover","onMouseEnter","onMouseLeave","barClassName","renders","mapValues","Item_ItemContainer","ItemSet","figure","ItemSet_Item","throttleInfo","Info","infoMap","throttle","ThrottledInfo","Info_Total","Info_ItemSet","PictureService","minRadius","positive","negative","uniqueId","weight","push","updateWeights","splice","payload","forEach","last","weightAndSize","getWeightAndSize","_ref3","sqrt","weights","getWeights","setRelativeWeight","figuresByType","groupBy","typeWeights","sumBy","sum","values","chain","service","Service","initialState","getInitialState","reducer","prevState","produce","draft","add","openForResizing","updateLast","changeName","remove","actionToTypeMap","onRead","readState","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","rawSavedState","localStorage","getItem","savedState","JSON","parse","stop","_x","apply","arguments","writeState","_callee2","_context2","resove","rawState","stringify","setItem","_x2","actionsMap","Tart","_useReducer","useReducer","_useReducer2","dispatch","actions","childrenProps","_callee3","_context3","sent","presents_Linen","presents_Info","App","StrictMode","presents_AppWrapper","containers_Tart","Boolean","location","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ff490f4.chunk.js","sourcesContent":["import React from 'react';\n\nconst silentFocus = action => {\n  const { scrollX, scrollY } = window;\n  action();\n  window.scrollTo(scrollX, scrollY);\n};\n\nconst throttleDelay = 200;\n\nconst AppWrapper = props => {\n  const children = React.Children.map(\n    props.children,\n    child => React.cloneElement(child, {\n      silentFocus,\n      throttleDelay,\n    })\n  );\n  return (\n    <div>\n      {children}\n    </div>\n  );\n};\n\nexport default AppWrapper;\n","import React from 'react';\n\nconst Figure = props => {\n  const style = {};\n  const radius = props.size;\n  const diameter = 2 * radius;\n  style.left = props.x - radius;\n  style.top = props.y - radius;\n  style.width = diameter;\n  style.height = diameter;\n  style.lineHeight = diameter;\n\n  const className = [\n    'linen__figure',\n    'figure',\n    `figure_type_${props.type}`,\n  ].join(' ');\n\n  const draggable = !props.weightChanging;\n  let handlers = {};\n  if (draggable) {\n    handlers = {\n      onDragStart: props.onMouse(props.onFigureMoveStart, props.index),\n      onDragEnd: props.onMouse(props.onFigureMoveEnd, props.index),\n    };\n  }\n\n  return (\n    <div\n      className={className}\n      style={style}\n      draggable={draggable}\n      {...handlers}\n    >\n      {props.index}\n    </div>\n  );\n};\n\nexport default React.memo(Figure);\n","export const areTotalWeightsDifferent = (prevProps, props) => {\n  const weightDiff = prevProps.totalWeight - props.totalWeight;\n  const differentWeights = Math.abs(weightDiff) >= Number.EPSILON;\n  return differentWeights;\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport Figure from './Linen/Figure';\nimport { areTotalWeightsDifferent } from '../../helpers';\nimport { pickBy } from 'lodash';\n\nconst typeMap = new Map()\n  .set(true,  'negative')\n  .set(false, 'positive')\n;\n\nconst handleMouse = (el, action, index) => e => {\n  const rect = el.current.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  const typeCondition = e.ctrlKey || e.shiftKey || e.button === 2;\n  const type = typeMap.get(typeCondition);\n  action({\n    x,\n    y,\n    type,\n    index,\n  });\n};\n\nconst LinenWrapper = props => {\n  const el = useRef(null);\n  const onMouse = handleMouse.bind(null, el);\n  const children = React.Children.map(props.children, el => React.cloneElement(\n    el,\n    {\n      ...el.props,\n      onMouse,\n    }\n  ));\n  return (\n    <div\n      className=\"linen app__element\"\n      style={{\n        width: props.size,\n        height: props.size,\n      }}\n      ref={el}\n      onMouseDown={e => {\n        const current = e.target === el.current;\n        current && handleMouse(el, props.onFigureAdd)(e);\n      }}\n      onMouseMove={onMouse(props.onFigureLastResize)}\n      onMouseUp={onMouse(props.onFigureLastUpdate)}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst MemoizedLinenWrapper = React.memo(LinenWrapper, (prevProps, props) => {\n  const propsToCompare = [\n    'size',\n    'onFigureAdd',\n    'onFigureLastResize',\n    'onFigureLastUpdate',\n  ];\n  for (const prop of propsToCompare) {\n    if (prevProps[prop] !== props[prop]) {\n      return false;\n    }\n  }\n  return true;\n});\n\nconst Figures = props => {\n  const callbacks = pickBy(props, prop => typeof prop === 'function');\n  return props.figures.map(({ id, size, type, x, y }, index) => (\n    <Figure\n      {...{\n        x,\n        y,\n        size,\n        type,\n        index,\n        ...callbacks,\n      }}\n      key={id}\n    />\n  ));\n};\n\nconst MemoizedFigures = React.memo(Figures, (prevProps, props) => {\n  if (prevProps.move !== props.move) {\n    return false;\n  }\n  if (prevProps.figures.length !== props.figures.length) {\n    return false;\n  }\n  if (props.weightChanging) {\n    return false;\n  }\n  const differentWeights = areTotalWeightsDifferent(prevProps, props);\n  if (differentWeights) {\n    return false;\n  }\n  return true;\n});\n\nclass FiguresContainer extends React.Component {\n  render() {\n    const props = {\n      ...this.props,\n      ...this.state,\n    };\n    return (\n      <MemoizedFigures\n        {...props}\n      />\n    );\n  }\n};\n\nconst Linen = props => {\n  const figuresRef = useRef(null);\n  useEffect(() => {\n    figuresRef.current.setState(props);\n  });\n  return (\n    <MemoizedLinenWrapper {...props}>\n      <FiguresContainer\n        {...props}\n        ref={figuresRef}\n      />\n    </MemoizedLinenWrapper>\n  );\n};\n\nexport default React.memo(Linen);\n","import React from 'react';\n\nconst Bar = props => {\n  const className = [\n    'app__element',\n    'info-total-bar',\n    'figure',\n    'figure_throttle',\n    `figure_type_${props.type}`,\n  ].join(' ');\n\n  const percent = props.percent.toFixed(1);\n\n  return (\n    <div\n      className={className}\n      style={{\n        width: `${props.width}px`,\n      }}\n    >\n      <span\n        className=\"info-total-bar__label\"\n      >\n        {percent}%\n      </span>\n    </div>\n  );\n};\n\nexport default React.memo(Bar);\n","import React from 'react';\nimport Bar from './Total/Bar';\nimport { areTotalWeightsDifferent } from '../../../helpers';\n\nconst Total = props => (\n  <>\n    {Object.entries(props.typeRelativeWeights).map(([type, relativeWeight]) => {\n      const width = relativeWeight * props.size;\n      const percent = relativeWeight * 100;\n      const barProps = {\n        percent,\n        width,\n        type,\n      };\n      return <Bar\n        {...barProps}\n        key={type}\n      />;\n    })}\n  </>\n);\n\nexport default React.memo(Total, (prevProps, props) => {\n  const differentWeights = areTotalWeightsDifferent(prevProps, props);\n  return !differentWeights;\n});\n","import React, { useState, useEffect, useRef } from 'react';\nimport { mapValues } from 'lodash';\n\nconst focusItemInteractiveName = ItemInteractiveName => {\n  const ItemInteractiveNameWithRef = React.forwardRef(ItemInteractiveName);\n  return props => {\n    const ref = useRef(null);\n    const timeout = useRef(null);\n    useEffect(() => {\n      clearTimeout(timeout.current);\n      const isBlured = document.activeElement !== ref.current;\n      isBlured && props.focus && (timeout.current = setTimeout(() => {\n        props.silentFocus(() => ref.current && ref.current.focus());\n      }, 50));\n    });\n    return (\n      <ItemInteractiveNameWithRef\n        {...props}\n        ref={ref}\n      />\n    );\n  };\n};\n\nconst ItemInteractiveName = focusItemInteractiveName((props, ref) => {\n  return (\n    <input className=\"item__editor item__child\"\n      ref={ref}\n      value={props.name}\n      onChange={e => {\n        e.preventDefault();\n        const name = e.target.value;\n        const index = props.index;\n        props.onChangeName({ name, index });\n      }}\n    />\n  );\n});\n\nconst controlsHoverMap = new Map()\n  .set(true, ({ onRemove, index }) => (\n    <button\n      onClick={e => {\n        e.preventDefault();\n        onRemove({ index });\n      }}\n    >\n      x\n    </button>\n  ))\n  .set(false, ({ index }) => index)\n;\n\nconst ItemControls = props => {\n  const [ hover, onChangeHover ] = useState(false);\n  return (\n    <span\n      className=\"item__number item__child\"\n      onMouseEnter={e => {\n        onChangeHover(true);\n      }}\n      onMouseLeave={e => {\n        onChangeHover(false);\n      }}\n    >\n      {controlsHoverMap.get(hover)(props)}\n    </span>\n  );\n};\n\nconst ItemChart = props => {\n  const barClassName = [\n    'item__bar',\n    'item__child',\n    'figure',\n    'figure_throttle',\n    `figure_type_${props.type}`,\n  ].join(' ');\n  const width = `${props.relativeWeight * 220}px`;\n  return (\n    <div\n      className={barClassName}\n      style={{\n        width,\n      }}\n    >\n    </div>\n  );\n};\n\nconst ItemContainer = props => {\n  return (\n    <div className=\"item app__element\">\n      {props.renderInteractiveName(props)}\n      {props.renderControls(props)}\n      {props.renderChart(props)}\n    </div>\n  );\n};\n\nconst renderMap = {\n  renderInteractiveName: ItemInteractiveName,\n  renderControls:        ItemControls,\n  renderChart:           ItemChart,\n};\n\nconst Item = props => {\n  const renders = mapValues(renderMap, Component => props => (\n    <Component {...props} />\n  ));\n  return (\n    <ItemContainer\n      {...props}\n      {...renders}\n    />\n  );\n};\n\nexport default React.memo(Item);\n","import React from 'react';\nimport Item from './ItemSet/Item';\nimport { pickBy } from 'lodash';\n\nconst ItemSet = props => {\n  const callbacks = pickBy(props, prop => typeof prop === 'function');\n  return (\n    <div style={{width: `${props.size}px`}}>\n      {props.figures.map((figure, index) => (\n        <Item\n          key={figure.id}\n          index={index}\n          {...figure}\n          {...callbacks}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ItemSet;\n","import React from 'react';\nimport Total from './Info/Total';\nimport ItemSet from './Info/ItemSet';\nimport { throttle } from 'lodash';\n\nconst Info = props => (\n  <>\n    <Total {...props} />\n    <ItemSet {...props} />\n  </>\n);\n\nconst throttleInfo = Info => {\n  const infoMap = new Map()\n    .set(false, Info)\n  ;\n  const ThrottledInfo = props => {\n    infoMap.get(true) || infoMap.set(true, throttle(Info, props.throttleDelay));\n    const ThrottledInfo = infoMap.get(props.weightChanging);\n    return (<ThrottledInfo {...props} />);\n  };\n  return ThrottledInfo;\n};\n\nexport default throttleInfo(Info);\n","import {\n  chain,\n  last,\n  mapValues,\n  groupBy,\n  sum,\n  sumBy,\n  uniqueId,\n} from 'lodash';\n\nclass PictureService {\n  getInitialState() {\n    const state = {\n      size: 500,\n      minRadius: 5,\n      totalWeight: 0,\n      figures: [/*\n        {\n          id,\n          x, //center\n          y, //center\n          weight,\n          relativeWeight,\n          size,\n          type,\n          name,\n          focus,\n        }\n      */],\n      typeRelativeWeights: {\n        positive: 0,\n        negative: 0,\n      },\n      weightChanging: false,\n    };\n    return state;\n  }\n\n  /**\n   * @param {Object[]} payload\n   * @param {number} payload[].x\n   * @param {number} payload[].y\n   * @param {string} payload[].type\n   */\n  add(state, { x, y, type }) {\n    const id = uniqueId('item_');\n    const figure = {\n      id,\n      x,\n      y,\n      size: 0,\n      weight: 0,\n      type,\n      name: '',\n      focus: false,\n    };\n    state.figures.push(figure);\n    state = this.updateWeights(state);\n    return state;\n  }\n\n  remove(state, { index }) {\n    state.figures.splice(index, 1);\n    state = this.updateWeights(state);\n    return state;\n  }\n\n  /**\n   * @param {Object[]} payload\n   * @param {number} payload[].x\n   * @param {number} payload[].y\n   */\n  updateLast(state, payload) {\n    state.figures.forEach(figure => figure.focus = false);\n    const figure = last(state.figures);\n    figure.focus = true;\n    const weightAndSize = this.getWeightAndSize(figure, payload);\n    Object.assign(figure, weightAndSize);\n    state = this.updateWeights(state);\n    return state;\n  }\n\n  changeName(state, { name, index }) {\n    const figure = state.figures[index];\n    figure.name = name;\n    return state;\n  }\n\n  getWeightAndSize(figure, payload) {\n    const width = payload.x - figure.x;\n    const height = payload.y - figure.y;\n    const weight = width * width + height * height;\n    const size = Math.sqrt(weight);\n    return {\n      weight,\n      size,\n    };\n  }\n\n  updateWeights(state) {\n    const weights = this.getWeights(state);\n    Object.assign(state, weights);\n    state.figures = state.figures.map(this.setRelativeWeight.bind(this, state));\n    return state;\n  }\n\n  getWeights(state) {\n    const figuresByType = groupBy(state.figures, 'type');\n    const typeWeights = mapValues(figuresByType, figures => sumBy(figures, 'weight'));\n    const totalWeight = sum(Object.values(typeWeights));\n    const typeRelativeWeights = chain(typeWeights)\n      .mapValues(weight => weight / totalWeight)\n      .mapValues(weight => weight !== weight ? 1 : weight)\n      .value()\n    ;\n    return {\n      typeRelativeWeights,\n      totalWeight,\n    };\n  }\n\n  setRelativeWeight(state, figure) {\n    figure.relativeWeight = figure.weight / state.totalWeight;\n    figure.relativeWeight = figure.relativeWeight !== figure.relativeWeight ? 1 : figure.relativeWeight;\n    return figure;\n  }\n}\n\nexport default PictureService;\n","import { merge } from 'lodash';\nimport Service from './stores/linen/service';\nimport produce from 'immer';\n\nexport const\n  FIGURE_ADD         = 'figure.add',\n  FIGURE_LAST_RESIZE = 'figure.last.resize',\n  FIGURE_LAST_UPDATE = 'figure.last.update',\n  FIGURE_NAME        = 'figure.name',\n  FIGURE_REMOVE      = 'figure.remove',\n  FIGURE_MOVE_START  = 'figure.move.start',\n  FIGURE_MOVE_END    = 'figure.move.end',\n  READ               = 'read'\n;\n\nconst service = new Service();\n\nexport const initialState = service.getInitialState();\n\nconst reducer = (prevState, { type, payload }) => {\n  const state = produce(prevState, draft => {\n    switch(type) {\n      case FIGURE_ADD: {\n        service.add(draft, payload);\n        draft.openForResizing = true;\n        break;\n      }\n      case FIGURE_LAST_RESIZE: {\n        if (draft.openForResizing) {\n          service.updateLast(draft, payload);\n          draft.weightChanging = true;\n        }\n        break;\n      }\n      case FIGURE_LAST_UPDATE: {\n        if (draft.openForResizing) {\n          service.updateLast(draft, payload);\n          draft.weightChanging = false;\n          draft.openForResizing = false;\n        }\n        break;\n      }\n      case FIGURE_NAME: {\n        service.changeName(draft, payload);\n        break;\n      }\n      case FIGURE_REMOVE: {\n        service.remove(draft, payload);\n        break;\n      }\n      case FIGURE_MOVE_START: {\n        break;\n      }\n      case FIGURE_MOVE_END: {\n        const { index, x, y } = payload;\n        const figure = draft.figures[index];\n        Object.assign(figure, {\n          x,\n          y,\n        });\n        draft.move = {\n          figure,\n        };\n        break;\n      }\n      case READ: {\n        Object.assign(draft, payload);\n        break;\n      }\n    }\n  });\n  return state;\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect } from 'react';\nimport Linen from '../presents/Linen';\nimport Info from '../presents/Info';\nimport { mapValues } from 'lodash';\nimport reducer, {\n  initialState,\n  FIGURE_ADD,\n  FIGURE_LAST_RESIZE,\n  FIGURE_LAST_UPDATE,\n  FIGURE_NAME,\n  FIGURE_REMOVE,\n  FIGURE_MOVE_START,\n  FIGURE_MOVE_END,\n  READ\n} from '../../reducer';\n\nconst actionToTypeMap = {\n  onFigureAdd:        FIGURE_ADD,\n  onFigureLastResize: FIGURE_LAST_RESIZE,\n  onFigureLastUpdate: FIGURE_LAST_UPDATE,\n  onChangeName:       FIGURE_NAME,\n  onRemove:           FIGURE_REMOVE,\n  onFigureMoveStart:  FIGURE_MOVE_START,\n  onFigureMoveEnd:    FIGURE_MOVE_END,\n  onRead:             READ,\n};\n\nconst readState = async state => new Promise(resolve => {\n  setTimeout(() => {\n    const rawSavedState = localStorage.getItem('tart.state') || null;\n    const savedState = JSON.parse(rawSavedState);\n    resolve(savedState || state);\n  });\n});\n\nconst writeState = async state => new Promise(resove => {\n  setTimeout(() => {\n    const rawState = JSON.stringify(state);\n    localStorage.setItem('tart.state', rawState);\n    resove();\n  });\n});\n\nconst actionsMap = new Map();\n\nconst Tart = props => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const actions = actionsMap.get(dispatch) || mapValues(actionToTypeMap, type => payload => dispatch({\n    type,\n    payload,\n  }));\n  actionsMap.set(dispatch, actions);\n  const childrenProps = {\n    ...props,\n    ...state,\n    ...actions,\n  };\n  useEffect(() => {\n    const init = state === initialState;\n    if (init) {\n      (async () => {\n        const savedState = await readState(state);\n        actions.onRead(savedState);\n        return savedState;\n      })();\n    } else {\n      writeState(state);\n    }\n  });\n  return (\n    <>\n      <Linen {...childrenProps} />\n      <Info {...childrenProps} />\n    </>\n  );\n};\n\nexport default Tart;\n","import React from 'react';\nimport AppWrapper from '../presents/AppWrapper';\nimport Tart from './Tart';\n\nconst App = props => {\n  return (\n    <React.StrictMode>\n      <AppWrapper>\n        <Tart />\n      </AppWrapper>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './js/components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}