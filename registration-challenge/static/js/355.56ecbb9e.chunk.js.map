{"version":3,"file":"static/js/355.56ecbb9e.chunk.js","mappings":"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","sources":["../node_modules/shallow-equal/src/index.ts","../node_modules/shallow-equal/src/arrays.ts","../node_modules/shallow-equal/src/objects.ts","feature/registration/component/Registration/index.tsx"],"sourcesContent":["import shallowEqualArrays from \"./arrays\";\nimport shallowEqualObjects from \"./objects\";\n\ntype Comparable = Record<string, any> | any[] | null | undefined;\n\nfunction shallowEqual<T extends Comparable>(a: T, b: T): boolean {\n  const aIsArr = Array.isArray(a);\n  const bIsArr = Array.isArray(b);\n\n  if (aIsArr !== bIsArr) {\n    return false;\n  }\n\n  if (aIsArr && bIsArr) {\n    return shallowEqualArrays(a, b);\n  }\n\n  return shallowEqualObjects(a, b);\n}\n\nexport { shallowEqual, shallowEqualObjects, shallowEqualArrays };\n","export type validArrayValue = any[] | null | undefined;\n\nexport default function shallowEqualArrays(\n  arrA: validArrayValue,\n  arrB: validArrayValue\n): boolean {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  const len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type { Key } from 'entity/user';\nimport type { InnerProps } from 'feature/registration';\nimport {\n  ComponentType,\n  Ref,\n  ReactElement,\n  FunctionComponent,\n  useMemo,\n  createContext,\n  useContext,\n  memo,\n} from 'react';\nimport type * as SUIR from 'semantic-ui-react';\nimport { shallowEqual } from 'shallow-equal';\nimport './style.css';\nimport invariant from 'invariant';\n\ntype PropsFrom<C> = C extends ComponentType<infer P>\n  ? P\n  : C extends keyof JSX.IntrinsicElements\n  ? JSX.IntrinsicElements[C]\n  : never;\n\nconst Context = createContext<Pick<typeof SUIR.Form, 'Field'> | null>(null);\n\nfunction FormField<C>(\n  props: SUIR.FormFieldProps & {\n    control: C;\n    fieldRef?: Ref<HTMLElement>;\n  } & PropsFrom<C>,\n) {\n  const Form = useContext(Context);\n  invariant(Form, 'Form is not defined');\n  const { fieldRef: ref, ...rest } = props;\n  return <Form.Field {...rest} ref={ref} />;\n}\n\nconst idPrefix = 'registration';\n\ntype FieldProps<K extends Key> = {\n  name: K;\n  children: (props: {\n    id: string;\n    value: string;\n    error: boolean;\n    label: string;\n    handleChange: (value: string) => void;\n    disabled: boolean;\n  }) => ReactElement;\n  fields: Pick<InnerProps, Key>;\n  submitting: boolean;\n  dependency?: unknown;\n} & Pick<InnerProps, 'onChange' | 'T'>;\n\nfunction extractToCompare<K extends Key>(props: FieldProps<K>) {\n  const { name, fields, submitting, onChange, T, dependency } = props;\n  const value = fields[name];\n  return { name, value, submitting, onChange, T, dependency };\n}\n\nconst Field = memo(\n  function Field<K extends Key>(\n    props: FieldProps<K>,\n  ): ReturnType<FunctionComponent> {\n    const { name, children, fields, onChange, T, submitting } = props;\n    const { value, error } = fields[name];\n    return children({\n      id: `${idPrefix}-${name}`,\n      value,\n      error: !!error,\n      label: error ? T(`error:${error}`) : T(`label:${name}`),\n      handleChange: (change) => onChange({ [name]: change }),\n      disabled: submitting,\n    });\n  },\n  (prev, next) => shallowEqual(extractToCompare(prev), extractToCompare(next)),\n);\n\nField.displayName = 'MemoizedField';\n\nfunction Registration({\n  done,\n  user,\n  T,\n  lang,\n  allowSubmit,\n  submitting,\n  error,\n  onSubmit,\n  onChange,\n  countries,\n\n  Dropdown,\n  Form,\n  Input,\n  Button,\n  Grid,\n  Message,\n  Divider,\n  Popup,\n  Container,\n\n  ...fields\n}: InnerProps & {\n  // In fact it would be better to follow ISP but it requires more efforts\n  Dropdown: typeof SUIR.Dropdown;\n  Form: typeof SUIR.Form;\n  Input: typeof SUIR.Input;\n  Button: typeof SUIR.Button;\n  Grid: typeof SUIR.Grid;\n  Message: typeof SUIR.Message;\n  Divider: typeof SUIR.Divider;\n  Popup: typeof SUIR.Popup extends ComponentType<infer C>\n    ? ComponentType<C>\n    : never;\n  Container: typeof SUIR.Container;\n}) {\n  const countryOptions = useMemo(() => {\n    const collator = new Intl.Collator(lang, {\n      usage: 'sort',\n      sensitivity: 'accent',\n    });\n    const result = Object.keys(countries ?? {})\n      .map((key) => ({\n        key,\n        value: key,\n        text: T(`country:${key}`),\n      }))\n      .sort(({ text: a }, { text: b }) => collator.compare(a, b));\n    return result;\n  }, [countries, T, lang]);\n  const fieldProps = { fields, onChange, T, submitting };\n  return (\n    <Context.Provider value={Form}>\n      <Form onSubmit={onSubmit} error={!!error} success={!!done}>\n        <Field name=\"name\" {...fieldProps}>\n          {({ handleChange, ...props }) => (\n            <FormField\n              {...props}\n              control={Input}\n              placeholder={T('Enter your first name')}\n              onChange={(_, { value }) => handleChange(value)}\n            />\n          )}\n        </Field>\n        <Field name=\"surname\" {...fieldProps}>\n          {({ handleChange, ...props }) => (\n            <FormField\n              {...props}\n              control={Input}\n              placeholder={T('Enter your second name')}\n              onChange={(_, { value }) => handleChange(value)}\n            />\n          )}\n        </Field>\n        <Field name=\"birthdate\" {...fieldProps}>\n          {({ handleChange, ...props }) => (\n            <FormField\n              {...props}\n              control={'input' as const}\n              type=\"date\"\n              max={user.validator.getMaxDate()}\n              min={user.validator.getMinDate()}\n              placeholder={T('Enter your first name')}\n              onChange={({ target: { value } }) => handleChange(value)}\n            />\n          )}\n        </Field>\n        <Field name=\"country\" {...fieldProps} dependency={countryOptions}>\n          {({ handleChange, disabled, ...props }) => (\n            <FormField\n              {...props}\n              control={Dropdown}\n              fluid\n              search\n              selection\n              closeOnChange\n              options={countryOptions}\n              loading={!countryOptions.length}\n              disabled={disabled || !countryOptions.length}\n              placeholder={T('Choose your country')}\n              onChange={(_, { value }) => handleChange(value?.toString() ?? '')}\n            />\n          )}\n        </Field>\n        <Divider />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={5}>\n              {useMemo(\n                () => (\n                  <Popup\n                    disabled={allowSubmit}\n                    size=\"small\"\n                    on=\"hover\"\n                    position=\"right center\"\n                    trigger={\n                      <Container>\n                        <Button\n                          loading={submitting}\n                          type=\"submit\"\n                          disabled={!allowSubmit}\n                          fluid\n                          size=\"big\"\n                          color={error ? 'red' : 'blue'}\n                        >\n                          {T('Save')}\n                        </Button>\n                      </Container>\n                    }\n                    content={T(\n                      'Please fill out the form correctly before submitting',\n                    )}\n                  />\n                ),\n                [Button, Container, Popup, T, allowSubmit, error, submitting],\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              {error && <Message error content={error.toString()} />}\n              {done && <Message success content={T('done', done)} />}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form>\n    </Context.Provider>\n  );\n}\n\nexport default Registration;\n"],"names":["shallowEqual","a","b","aIsArr","Array","isArray","bIsArr","arrA","arrB","len","length","i","shallowEqualArrays","objA","objB","aKeys","Object","keys","bKeys","key","prototype","hasOwnProperty","call","shallowEqualObjects","Context","createContext","FormField","props","Form","useContext","invariant","fieldRef","ref","rest","_jsx","Field","extractToCompare","name","fields","submitting","onChange","T","dependency","value","memo","children","error","id","concat","label","handleChange","change","disabled","prev","next","displayName","_ref","done","user","lang","allowSubmit","onSubmit","countries","Dropdown","Input","Button","Grid","Message","Divider","Popup","Container","countryOptions","useMemo","collator","Intl","Collator","usage","sensitivity","map","text","sort","_ref2","_ref3","compare","fieldProps","Provider","_jsxs","success","_ref4","control","placeholder","_","_ref5","_ref6","_ref7","_ref8","type","max","validator","getMaxDate","min","getMinDate","_ref9","target","_ref10","fluid","search","selection","closeOnChange","options","loading","_ref11","_value$toString","toString","Row","Column","width","size","on","position","trigger","color","content"],"sourceRoot":""}