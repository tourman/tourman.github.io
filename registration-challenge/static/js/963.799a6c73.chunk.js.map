{"version":3,"file":"static/js/963.799a6c73.chunk.js","mappings":"2KAOA,MAiCA,EAjCyB,SAAgBA,GAIrC,IAJsC,SACxCC,EAAQ,cACRC,KACGC,GACJH,EACC,MAAOI,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,YACpBG,GAA2CC,EAAAA,EAAAA,UAAQ,IAAM,IAAI,KAC5DC,EAAMC,IAAWN,EAAAA,EAAAA,UAASG,GAC3BI,GAAqDH,EAAAA,EAAAA,UACzD,MAAS,IACT,KAEKI,EAAWC,IAAgBT,EAAAA,EAAAA,UAASO,IAC3CG,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAI,CAACjB,IAAYC,MACtBiB,MAAKC,IAA8B,IAA5BC,EAASC,GAAaF,EAC5Bf,GAAW,GACXO,EAAQS,GACRN,EAAaO,GACbd,OAAS,EAAO,IAEjBe,OAAOC,IACNnB,GAAW,GACXO,EAAQH,GACRM,EAAaF,GACbL,EAASgB,EAAI,GACb,GACH,CAACvB,EAAUQ,EAAaP,EAAeW,IAE1C,MADe,CAAET,UAASG,QAAOI,OAAMG,eAAcX,EAEvD,C","sources":["feature/list/useList.ts"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport type { UseList } from 'feature/list';\n\ntype FromLoader<L extends (...args: unknown[]) => Promise<unknown>> = Awaited<\n  ReturnType<L>\n>;\n\nconst useList: UseList = function useList({\n  loadList,\n  loadCountries,\n  ...transit\n}) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const defaultList: FromLoader<typeof loadList> = useMemo(() => [], []);\n  const [list, setList] = useState(defaultList);\n  const defaultCountries: FromLoader<typeof loadCountries> = useMemo(\n    () => ({}),\n    [],\n  );\n  const [countries, setCountries] = useState(defaultCountries);\n  useEffect(() => {\n    Promise.all([loadList(), loadCountries()])\n      .then(([newList, newCountries]) => {\n        setLoading(false);\n        setList(newList);\n        setCountries(newCountries);\n        setError(void 0);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setList(defaultList);\n        setCountries(defaultCountries);\n        setError(err);\n      });\n  }, [loadList, defaultList, loadCountries, defaultCountries]);\n  const result = { loading, error, list, countries, ...transit };\n  return result;\n};\n\nexport default useList;\n"],"names":["_ref","loadList","loadCountries","transit","loading","setLoading","useState","error","setError","defaultList","useMemo","list","setList","defaultCountries","countries","setCountries","useEffect","Promise","all","then","_ref2","newList","newCountries","catch","err"],"sourceRoot":""}