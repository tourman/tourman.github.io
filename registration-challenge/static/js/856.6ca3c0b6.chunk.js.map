{"version":3,"file":"static/js/856.6ca3c0b6.chunk.js","mappings":"mCAgDAA,EAAOC,QA5BS,SAASC,EAAWC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAOzD,IAAKP,EAAW,CACd,IAAIQ,EACJ,QAAeC,IAAXR,EACFO,EAAQ,IAAIE,MACV,qIAGG,CACL,IAAIC,EAAO,CAACT,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBK,EAAW,GACfJ,EAAQ,IAAIE,MACVT,EAAOY,QAAQ,OAAO,WAAa,OAAOF,EAAKC,IAAa,MAExDE,KAAO,qBACf,CAGA,MADAN,EAAMO,YAAc,EACdP,CACR,CACF,C,GC7CIQ,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBT,IAAjBU,EACH,OAAOA,EAAapB,QAGrB,IAAID,EAASkB,EAAyBE,GAAY,CAGjDnB,QAAS,CAAC,GAOX,OAHAqB,EAAoBF,GAAUpB,EAAQA,EAAOC,QAASkB,GAG/CnB,EAAOC,OACf,CCrBAkB,EAAoBI,EAAKvB,IACxB,IAAIwB,EAASxB,GAAUA,EAAOyB,WAC7B,IAAOzB,EAAiB,QACxB,IAAM,EAEP,OADAmB,EAAoBZ,EAAEiB,EAAQ,CAAEpB,EAAGoB,IAC5BA,CAAM,ECLdL,EAAoBZ,EAAI,CAACN,EAASyB,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAE3B,EAAS0B,IAC5EE,OAAOC,eAAe7B,EAAS0B,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAoBS,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCAlF,MAAMI,EAAY,CAChBtB,KAAM,GACNuB,QAAS,GACTC,UAAW,GACXC,QAAS,IASEC,EAAOb,OAAOa,KAAKJ,G,uBCLhC,MAAMK,EAAyBC,IAA0C,IAAzC,QAAEC,EAAO,WAAEC,EAAU,WAAEC,GAAYH,EACjE,MAAMI,GAAYN,EACfO,KAAKtB,GAAQkB,EAAQlB,GAAKjB,QAC1BwC,QAAQxC,GAAUA,IAAOyC,OACtBC,GAAaV,EAChBO,KAAKtB,GAAQkB,EAAQlB,GAAK0B,QAC1BH,QAAQG,GAAoB,KAAVA,IAAcF,OACnCG,IACET,EAAQF,eACLK,GAAYI,IAAcN,IAAeC,GAC5C,6BACAQ,KAAKC,UAAU,CACb,sBAAuBX,EAAQF,YAC/BK,WACAF,aACAC,eAEH,EAGGU,EAA6BC,IAA8B,IAA7B,WAAEX,EAAU,QAAEF,GAASa,EACzDJ,MAAYP,IAAeF,EAAQE,WAAY,yBAAyB,EAGpEY,EAAoCC,IAGnC,IAHoC,WACzCb,EACAF,SAAS,MAAEnC,IACZkD,EACC,GAAIb,GAAcrC,EAChB,MAAM,IAAIE,MAAM,oCAClB,EAGIiD,EAAuBC,IAA8B,IAA7B,QAAEjB,EAAO,WAAEC,GAAYgB,EACnD,MAAM,KAAEC,EAAI,MAAErD,EAAK,WAAEqC,GAAeF,EAChCkB,IACFT,KACGZ,EAAKQ,QAAQvB,GAA+B,KAAvBkB,EAAQlB,GAAK0B,QAAcF,OACjD,wCAEFG,KACGZ,EAAKQ,QAAQvB,GAA+B,OAAvBkB,EAAQlB,GAAKjB,QAAgByC,OACnD,sCAEFG,KAAW5C,EAAO,+BAClB4C,KAAWP,EAAY,oCACvBO,KAAWR,EAAY,qCAErBJ,EAAKQ,QAAQvB,GAA+B,KAAvBkB,EAAQlB,GAAK0B,QAAcF,QAClDG,KAAWS,EAAM,kDAEfrD,GACF4C,KAAWS,EAAM,8BACnB,EAGIC,EAA6BC,IAAkB,IAAjB,QAAEpB,GAASoB,EAC7C,IAAK,MAAMtC,KAAOe,EACW,KAAvBG,EAAQlB,GAAK0B,OACfC,IACyB,gBAAvBT,EAAQlB,GAAKjB,MACb,mEAGN,EAeF,EAVuBwD,GAAkBC,IACvC,CACExB,EACAc,EACAE,EACAE,EACAG,GACAI,SAASC,GAAmBH,GAAa,IAAMG,EAAeF,MAAQ,EClF1E,IAAIG,EAEJC,KAAKC,iBAAiB,WAAYhE,IAAO,IAADiE,EACtCH,EACU,QADFG,EACNH,SAAQ,IAAAG,EAAAA,EACRC,GAAkBC,IAChB,IACEA,GACF,CAAE,MAAOjE,GACP6D,KAAKK,YAAYlE,EACnB,KAEJ4D,EAAU,OAAD9D,QAAC,IAADA,OAAC,EAADA,EAAGqE,KAAK,G","sources":["../node_modules/invariant/browser.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","entity/user/index.ts","feature/registration/reducer/validate.ts","main/reducer.validator.worker.ts"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const emptyUser = {\n  name: '',\n  surname: '',\n  birthdate: '',\n  country: '',\n};\n\nexport type Entry = typeof emptyUser;\n\nexport type PartialEntry = Partial<Entry>;\n\nexport type Key = keyof Entry;\n\nexport const keys = Object.keys(emptyUser) as Key[];\n\nexport type Validator = {\n  [K in keyof Entry]: (value?: Entry[K]) => Promise<void>;\n} & {\n  getMinDate(): string;\n  getMaxDate(): string;\n  loadCountries: LoadCountries;\n};\n\nconst validationTypes = {\n  FULL_STRING: 'String must be not empty',\n  TRIMMED_STRING: 'String must be trimmed',\n  DATE_FORMAT: 'Date must be YYYY-MM-DD',\n  VALID_DATE: 'Date must be valid',\n  DATE_PAST: 'Date must be in past',\n  AGE_LIMIT: 'Date cannot be more than specific amount of years',\n  COUNTRY: 'Country code must be valid',\n} as const;\n\nexport type ValidationType = keyof typeof validationTypes;\n\nexport interface ValidationInvariant {\n  (condition: unknown, validationType: ValidationType): asserts condition;\n}\n\nexport type CountryMap = Record<string, string>;\n\nexport interface LoadCountries {\n  (): Promise<CountryMap>;\n}\n\nexport interface ValidationRejectedResult extends PromiseRejectedResult {\n  key: Key;\n  reason: ValidationType | { message: ValidationType };\n}\n\nfunction isValidationRejectedResult(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  result: any,\n): result is ValidationRejectedResult {\n  return (\n    result?.status === 'rejected' &&\n    result?.key in emptyUser &&\n    (result?.reason?.message ?? result?.reason) in validationTypes\n  );\n}\n\nexport type AcceptedTime = Time | Date | string | number;\n\nexport interface Time {\n  isTime(): 'Time';\n  getTime(): Exclude<AcceptedTime, Time>;\n  minusYears(years: number): Time;\n  minusDays(days: number): Time;\n  // should return in format 'yyyy-mm-dd'\n  toString(): string;\n  greaterThan(time: AcceptedTime): boolean;\n  lessOrEqualThan(time: AcceptedTime): boolean;\n}\n\nexport interface TimeClass {\n  new (time: AcceptedTime): Time;\n  now(): Time;\n  isValid(time: string): boolean;\n}\n\nexport interface UserFactory {\n  (): User;\n}\n\nclass User {\n  constructor(public readonly validator: Validator) {}\n  protected entry: PartialEntry = {};\n  set(entry: PartialEntry): void {\n    this.entry = entry;\n  }\n  async validate(): Promise<void> {\n    await Promise.allSettled(\n      keys.map((key) => this.validator[key](this.entry[key])),\n    )\n      .then((results) =>\n        results.map((result, index) => ({ ...result, key: keys[index] })),\n      )\n      .then((results) => results.filter(isValidationRejectedResult))\n      .then((rejects) => {\n        if (!rejects.length) {\n          return;\n        }\n        throw new AggregateError(rejects, 'Invalid user entry');\n      });\n  }\n}\n\nexport default User;\n","import { keys } from 'entity/user';\nimport type { State, StateValidator } from 'feature/registration';\nimport invariant from 'invariant';\n\ninterface Validator {\n  (state: State): void;\n}\n\nconst allowSubmit: Validator = ({ display, validating, submitting }) => {\n  const noErrors = !keys\n    .map((key) => display[key].error)\n    .filter((error) => error).length;\n  const allFilled = !keys\n    .map((key) => display[key].value)\n    .filter((value) => value === '').length;\n  invariant(\n    display.allowSubmit ===\n      (noErrors && allFilled && !validating && !submitting),\n    'allowSubmit is violated %s',\n    JSON.stringify({\n      'display.allowSubmit': display.allowSubmit,\n      noErrors,\n      validating,\n      submitting,\n    }),\n  );\n};\n\nconst checkSubmitting: Validator = ({ submitting, display }) => {\n  invariant(!!submitting === display.submitting, 'Submitting is violated');\n};\n\nconst noErrorWhileSubmitting: Validator = ({\n  submitting,\n  display: { error },\n}) => {\n  if (submitting && error) {\n    throw new Error('No error allowed while submitting');\n  }\n};\n\nconst checkDone: Validator = ({ display, validating }) => {\n  const { done, error, submitting } = display;\n  if (done) {\n    invariant(\n      !keys.filter((key) => display[key].value !== '').length,\n      'All values must be nullish when done',\n    );\n    invariant(\n      !keys.filter((key) => display[key].error !== null).length,\n      'All errors must be reset when done',\n    );\n    invariant(!error, 'No error expected when done');\n    invariant(!submitting, 'No submitting expected when done');\n    invariant(!validating, 'No validation expected when done');\n  }\n  if (keys.filter((key) => display[key].value !== '').length) {\n    invariant(!done, 'Done value must be reset once form has changed');\n  }\n  if (error) {\n    invariant(!done, 'No done expected when error');\n  }\n};\n\nconst fullStringError: Validator = ({ display }) => {\n  for (const key of keys) {\n    if (display[key].value === '') {\n      invariant(\n        display[key].error !== 'FULL_STRING',\n        'FULL_STRING error should be ignore due to better user experience',\n      );\n    }\n  }\n};\n\nconst validatorFactory: (\n  registerTask: (task: () => void) => void,\n) => StateValidator = (registerTask) => (state) => {\n  [\n    allowSubmit,\n    checkSubmitting,\n    noErrorWhileSubmitting,\n    checkDone,\n    fullStringError,\n  ].forEach((innerValidator) => registerTask(() => innerValidator(state)));\n};\n\nexport default validatorFactory;\n","import validatorFactory from 'feature/registration/reducer/validate';\n\nlet validate: ReturnType<typeof validatorFactory>;\n\nself.addEventListener('message', (e) => {\n  validate =\n    validate ??\n    validatorFactory((task) => {\n      try {\n        task();\n      } catch (error) {\n        self.postMessage(error);\n      }\n    });\n  validate(e?.data);\n});\n\nexport {};\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","emptyUser","surname","birthdate","country","keys","allowSubmit","_ref","display","validating","submitting","noErrors","map","filter","length","allFilled","value","invariant","JSON","stringify","checkSubmitting","_ref2","noErrorWhileSubmitting","_ref3","checkDone","_ref4","done","fullStringError","_ref5","registerTask","state","forEach","innerValidator","validate","self","addEventListener","_validate","validatorFactory","task","postMessage","data"],"sourceRoot":""}